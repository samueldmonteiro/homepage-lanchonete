version: "3.8"

services:
  app:
    build:
      args:
        uid: ${DOCKER_APP_UID}
        user: ${DOCKER_APP_USER}
      context: ./
      dockerfile: ./docker/app/Dockerfile
    container_name: lanchonete-app
    restart: unless-stopped
    working_dir: /var/www/
    ports:
      - 5173:5173
    volumes:
      - ./:/var/www
    depends_on:
      - db
      - redis
    networks:
      - lanchonete

  db:
    image: mysql:8.0.30
    restart: unless-stopped
    container_name: lanchonete-db
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - lanchonete_db_vol:/var/lib/mysql
    networks:
      - lanchonete

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin:latest
    container_name: lanchonete-phpmyadmin
    restart: always
    ports:
      - "8090:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - lanchonete

  redis:
    image: redis:7.0.7
    container_name: lanchonete-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --requirepass ${REDIS_PASSWORD} --loglevel warning 
    volumes:
      - lanchonete_redis_vol:/data
    networks:
      - lanchonete

  nginx:
    image: nginx:1.22.1-alpine
    container_name: lanchonete-nginx
    restart: unless-stopped
    ports:
      - ${SERVER_PORT}:80
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - lanchonete
 
volumes:
  lanchonete_db_vol:
  lanchonete_redis_vol:

networks:
  lanchonete:
    driver: bridge

